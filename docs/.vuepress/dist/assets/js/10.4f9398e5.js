(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{364:function(e,r,t){"use strict";t.r(r);var a=t(42),o=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协议"}},[e._v("#")]),e._v(" 协议")]),e._v(" "),t("h2",{attrs:{id:"使用nodejs可以获取客户端连接的真实ip吗-为什么-如何获取-2142"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用nodejs可以获取客户端连接的真实ip吗-为什么-如何获取-2142"}},[e._v("#")]),e._v(" 使用nodejs可以获取客户端连接的真实IP吗？为什么？如何获取？ #2142")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/haizlin/fe-interview/issues/2142",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/haizlin/fe-interview/issues/2142"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("不能直接获取。")]),e._v(" "),t("p",[e._v("一般来说 web服务器需要经过一层反向代理"),t("br"),e._v("\n这个时候读取到的http请求 都是由代理服务器或者负载均衡发起的。\n拿到的请求IP地址 都是代理服务器的IP地址。")]),e._v(" "),t("p",[e._v("这个时候 一般通过读取http请求头中的X-Forwarded-For来获取原请求IP以及经过的代理服务器的IP。")]),e._v(" "),t("p",[e._v("X-Forwarded-For协议格式")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("X-Forwarded-For: <client>, <proxy1>, <proxy2>\n")])])]),t("p",[e._v("参考资料："),t("br"),e._v(" "),t("a",{attrs:{href:"https://zh.wikipedia.org/zh-hant/X-Forwarded-For",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://zh.wikipedia.org/zh-hant/X-Forwarded-For"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Forwarded-For",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Forwarded-For"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"请解释下expires和cache-control有什么区别-1855"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请解释下expires和cache-control有什么区别-1855"}},[e._v("#")]),e._v(" 请解释下Expires和Cache-Control有什么区别？ #1855")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/haizlin/fe-interview/issues/1855",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/haizlin/fe-interview/issues/1855"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Expires 定义资源过期时间"),t("br"),e._v("\nCache-control 定义资源缓存策略")]),e._v(" "),t("h3",{attrs:{id:"no-cache-和-no-store的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-cache-和-no-store的区别"}},[e._v("#")]),e._v(" no-cache 和 no-store的区别")]),e._v(" "),t("p",[e._v("no-store 指的是 永远不缓存请求和响应内容 并直接从服务器中下载原始资源"),t("br"),e._v("\nno-cache 指的是 由缓存请求服务器检查缓存是否过期，如果未过期 则下载缓存内容，过期则从服务器下载原始资源")])])}),[],!1,null,null,null);r.default=o.exports}}]);